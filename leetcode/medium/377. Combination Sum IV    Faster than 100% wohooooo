class Solution {
public:
    int dp[1007];
    int solve(int cur, const int& target, const vector<int> &nums){
        if (cur > target)
            return 0;
        if (cur == target)
            return 1;
        int &ans = dp[cur];
        if (ans != -1)
            return ans;
        ans = 0;
        for (int i = 0; i < nums.size(); i++){
            ans += solve(cur + nums[i], target, nums);
        }
        return ans;
        
    }
    int combinationSum4(vector<int>& nums, int target) {
        unordered_map<int, int> mp;
        for (auto e: nums)
            mp[e]++;
        memset(dp, -1, sizeof dp);

        return solve(0, target, nums);
        
    }
};